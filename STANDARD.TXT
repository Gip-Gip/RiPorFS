This file is made available under the Creative Commons CC0 1.0 Universal
Public Domain Dedication.

The person who associated a work with this deed has dedicated the work
to the public domain by waiving all of his or her rights to the work
worldwide under copyright law, including all related and neighboring
rights, to the extent allowed by law. You can copy, modify, distribute
and perform the work, even for commercial purposes, all without asking
permission.

Ridge - an unsigned 8-bit integer either after the signature, after a
null-terminated filename, or pointed to by another ridge.

v1:

RiPorFS = filesystem signature, ASCII
ridge value 255 = filename ridge, ASCII, terminated by null
ridge value 254 = end-of-filesystem marker
ridge value < 254 = file data, size given by ridge

v2:

utilities must support detection and conversion of LSB and MSB data.
support for directories.
each ridge has a OEC8 checksum right before it, which covers the ridge
value and it's data.

exp128rpfs = filesystem signature, ASCII.

ridge value...
 255 = end-of-filesystem marker
 254 = filename ridge, UTF-8, terminated by null
 253 = directory start ridge, UTF-8, terminated by null
 252 = directory end ridge
 251 = timestamp, UTF-8, base 10, in Unix Time, termianted by null
 < 128 = file data, size given by ridge value

OEC8 checksum C example:

unsigned char OEC8(unsigned char *data, int size)
{
    unsigned char checksum = 0;
    int cursor = 0;
    unsigned char dataClone;
    int offsetCount;
    while(cursor < size)
    {
        dataClone = *(data + cursor);
        if(dataClone & 1 == 1)
        {
            offsetCount = cursor;
            while(offsetCount > 0)
            {
                dataClone = *(data + cursor);
                while(dataClone > 0)
                {
                    if(checksum == 255) checksum = 0;
                    checksum ++;
                    dataClone --;
                }
                offsetCount --;
            }
        }
        else if(checksum > 0)
        {
            offsetCount = cursor;
            while(offsetCount > 0)
            {
                dataClone = *(data + cursor);
                while(dataClone > 0)
                {
                    if(checksum == 0) checksum = 255;
                    checksum --;
                    dataClone --;
                }
                offsetCount --;
            }
        }
        cursor ++;
    }
    return checksum;
}

All software examples can be used by anyone, for anything, and are
provided without warranty or guarentee by the author. The author
shall not be liable for any claim connected to this software.
